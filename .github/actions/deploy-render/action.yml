name: "Deploy to Render"
description: "Deploys the application to Render"
inputs:
  RENDER_API_KEY:
    description: "The API key for Render"
    required: true
  RENDER_SERVICE_ID:
    description: "The service ID for Render"
    required: true
runs:
  using: "composite"
  steps:
    - name: Debug Inputs
      run: |
        echo "Debugging inputs:"
        echo "RENDER_API_KEY: ${{ inputs.RENDER_API_KEY }}"
        echo "RENDER_SERVICE_ID: ${{ inputs.RENDER_SERVICE_ID }}"
      shell: bash

    - name: Check required inputs
      run: |
        if [ -z "${{ inputs.RENDER_API_KEY }}" ] || [ -z "${{ inputs.RENDER_SERVICE_ID }}" ]; then
          echo "ERROR: Required inputs are missing."
          exit 1
        fi
      shell: bash

    - name: Trigger deployment
      run: |
        API_URL="https://api.render.com/v1/services/${{ inputs.RENDER_SERVICE_ID }}/deploys"
        RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST "$API_URL" \
          -H "Authorization: Bearer ${{ inputs.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          --data '{}')

        if [ "$RESPONSE" -ne 200 ] && [ "$RESPONSE" -ne 201 ]; then
          echo "ERROR: Deployment failed with status code $RESPONSE"
          cat response.json
          rm -f response.json
          exit 1
        fi
        echo "Deployment triggered successfully ðŸš€"
        rm -f response.json
      shell: bash

    - name: Verify deployment status
      run: |
        API_URL="https://api.render.com/v1/services/${{ inputs.RENDER_SERVICE_ID }}/deploys"
        MAX_RETRIES=20  
        RETRY_DELAY=15  

        echo "Checking deployment status..."
        for i in $(seq 1 $MAX_RETRIES); do
          DEPLOY_STATUS=$(curl -s -X GET "$API_URL" \
            -H "Authorization: Bearer ${{ inputs.RENDER_API_KEY }}" \
            | jq -r '.[0].status')  

          echo "Current deployment status: $DEPLOY_STATUS"

          if [ "$DEPLOY_STATUS" == "live" ]; then
            echo "Deployment is live âœ…"
            exit 0
          elif [ "$DEPLOY_STATUS" == "failed" ]; then
            echo "ERROR: Deployment failed! ðŸš¨"
            exit 1
          fi

          echo "Deployment not live yet. Retrying in $RETRY_DELAY seconds... ($i/$MAX_RETRIES)"
          sleep $RETRY_DELAY
        done

        echo "ERROR: Deployment verification failed after $MAX_RETRIES attempts! ðŸš¨"
        exit 1
      shell: bash
