name: CI-CD pipeline - react-started

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js and install dependancies
        uses: '../steps/setup-node.yml'

      - name: continuous Integration
        run: yarn ci

      - name: Bump version and create changelog
        run: npx standard-version

      - name: Tag version
        run: |
          TAG="v$(node -p -e "require('./package.json').version")"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists"
            exit 1
          fi
          git tag -a $TAG -m "Release version $TAG"

      - name: Push tags to GitHub
        run: git push --tags

      - name: Check required secrets
        run: |
          if [ -z "${{ secrets.RENDER_API_KEY }}" ]; then
            echo "RENDER_API_KEY is missing"
            exit 1
          fi
          if [ -z "${{ secrets.RENDER_SERVICE_ID }}" ]; then
            echo "RENDER_SERVICE_ID is missing"
            exit 1
          fi

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          RESPONSE=$(curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
             -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
             -H "Content-Type: application/json" \
             --data '{}' -w "%{http_code}" -o /dev/null)

           if [ "$RESPONSE" -ne 200 ]; then
             echo "Deployment failed with status code $RESPONSE"
             exit 1
           fi
      - name: Send success message
        run: echo "All done successfully! ðŸš€"
